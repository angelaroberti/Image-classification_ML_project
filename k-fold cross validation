{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18758,"status":"ok","timestamp":1684413199401,"user":{"displayName":"Angela Roberti","userId":"00499277721803720726"},"user_tz":-120},"id":"QZC25-pcAaMV","outputId":"e870fcc3-d3d9-484d-ea29-3a46726604ca"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive/\n"]}],"source":["# Connect colab with drive \n","from google.colab import drive \n","drive.mount('/content/gdrive/', force_remount=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pIgGCV5MAmUl"},"outputs":[],"source":["# Unzip quietly the folder \n","!unzip -q /content/gdrive/MyDrive/CatsDogs.zip "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7VDiXuVsA4F5"},"outputs":[],"source":["# Import necessary libraries \n","import tensorflow as tf \n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt \n","from tensorflow.keras.models import Sequential \n","from tensorflow.keras.layers import Dense, Activation, Conv2D, MaxPooling2D,Flatten, Dropout \n","from tensorflow.keras import layers"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6skKaTMRBMk3"},"outputs":[],"source":["# Delete from the folder the corrupted images\n","import os \n","for folder_path in [\"/content/CatsDogs/Cats\", \"/content/CatsDogs/Dogs\"]:\n","  for file_name in os.listdir(folder_path):\n","    file_path = os.path.join(folder_path, file_name)\n","    try:\n","      obj = open(file_path, \"rb\")\n","      is_jfif = tf.compat.as_bytes(\"JFIF\") in obj.peek(10)\n","    finally:\n","      obj.close()\n","    if is_jfif == False:\n","      os.remove(file_path)"]},{"cell_type":"code","source":["print(\"Cats photos after remotion: \" +str(len(os.listdir('/content/CatsDogs/Cats'))))\n","print(\"Dogs photos after remotion: \" +str(len(os.listdir('/content/CatsDogs/Dogs'))))"],"metadata":{"id":"LemMa_zOIGVr"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Pu-zI9SyBga1"},"outputs":[],"source":["# Assign hyperparameters values\n","INPUT_SHAPE = (128,128)\n","BATCH_SIZE = 32"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HNGg1XHMBo4o"},"outputs":[],"source":["# Create a dataframe with uncorrupted cats and dogs images \n","df = pd.DataFrame(columns=[\"Path\", \"Class\"])\n","dirs = ['/content/CatsDogs/Cats', '/content/CatsDogs/Dogs']\n","for dir in dirs:\n","  paths= os.listdir(dir)\n","  class_name=dir.split(\"/\")[-1]\n","  df_temp = pd.DataFrame({\"Path\": paths, \"Class\": class_name})\n","  df_temp[\"Path\"] = dir + \"/\" + df_temp[\"Path\"].astype(str)\n","  df = pd.concat([df,df_temp])\n","\n","df.sort_values(by=\"Path\", inplace=True, ignore_index=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":240,"status":"ok","timestamp":1684413235776,"user":{"displayName":"Angela Roberti","userId":"00499277721803720726"},"user_tz":-120},"id":"PixPo8u7Dg6d","outputId":"4e43fd1f-864e-436f-e027-b1290665c96a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                   Path Class\n","10955   /content/CatsDogs/Cats/9244.jpg  Cats\n","17289   /content/CatsDogs/Dogs/4080.jpg  Dogs\n","5192     /content/CatsDogs/Cats/373.jpg  Cats\n","12172  /content/CatsDogs/Dogs/10413.jpg  Dogs\n","235    /content/CatsDogs/Cats/10221.jpg  Cats"],"text/html":["\n","  <div id=\"df-0903dac1-5152-4937-9945-9be96ac0a893\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Path</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10955</th>\n","      <td>/content/CatsDogs/Cats/9244.jpg</td>\n","      <td>Cats</td>\n","    </tr>\n","    <tr>\n","      <th>17289</th>\n","      <td>/content/CatsDogs/Dogs/4080.jpg</td>\n","      <td>Dogs</td>\n","    </tr>\n","    <tr>\n","      <th>5192</th>\n","      <td>/content/CatsDogs/Cats/373.jpg</td>\n","      <td>Cats</td>\n","    </tr>\n","    <tr>\n","      <th>12172</th>\n","      <td>/content/CatsDogs/Dogs/10413.jpg</td>\n","      <td>Dogs</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>/content/CatsDogs/Cats/10221.jpg</td>\n","      <td>Cats</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0903dac1-5152-4937-9945-9be96ac0a893')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0903dac1-5152-4937-9945-9be96ac0a893 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0903dac1-5152-4937-9945-9be96ac0a893');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}],"source":["shuffled = df.sample(frac=1,random_state=1)\n","shuffled.tail()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kyRMgS4_RchQ"},"outputs":[],"source":["# Split the dataframe into training, validation and test set\n","rowsplice = int(0.8*len(shuffled))\n","df_train_valid = shuffled.iloc[:rowsplice]\n","df_test = shuffled.iloc[rowsplice:]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xKoh30RjReU_"},"outputs":[],"source":["from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","datagenA = ImageDataGenerator(rescale=1.0/255, validation_split=0.2)\n","datagenB= ImageDataGenerator( rescale= 1.0/255)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1684413240545,"user":{"displayName":"Angela Roberti","userId":"00499277721803720726"},"user_tz":-120},"id":"fgkoDeVfRgWK","outputId":"3ed5c7d4-c49c-4ae9-f179-f24ff1ae904f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Found 14983 validated image filenames belonging to 2 classes.\n"]}],"source":["training_ds= datagenA.flow_from_dataframe(dataframe=df_train_valid,\n","                                           directory=\"/content/CatsDogs\",\n","                                           x_col ='Path',\n","                                           y_col='Class',\n","                                           target_size=(128,128),\n","                                           class_mode='binary',\n","                                           subset='training',\n","                                           seed=10)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":541,"status":"ok","timestamp":1684413242590,"user":{"displayName":"Angela Roberti","userId":"00499277721803720726"},"user_tz":-120},"id":"fcvJbEVhRiJ8","outputId":"566b6bd6-97b7-4bea-d5dd-4aafb1ac5dea"},"outputs":[{"output_type":"stream","name":"stdout","text":["Found 3745 validated image filenames belonging to 2 classes.\n"]}],"source":["validation_ds= datagenA.flow_from_dataframe(dataframe=df_train_valid,\n","                                             directory=\"/content/CatsDogs\",\n","                                             x_col ='Path',\n","                                             y_col='Class',\n","                                             target_size=(128,128),\n","                                             class_mode='binary',\n","                                             subset='validation',\n","                                             seed=10)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1684413244018,"user":{"displayName":"Angela Roberti","userId":"00499277721803720726"},"user_tz":-120},"id":"bJGfq71kRkcP","outputId":"911c1925-2a86-4dde-b759-3291881dc8e0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Found 4682 validated image filenames belonging to 2 classes.\n"]}],"source":["test_ds= datagenB.flow_from_dataframe(dataframe=df_test,\n","                                             directory=\"/content/CatsDogs\",\n","                                             x_col ='Path',\n","                                             y_col='Class',\n","                                             target_size=(128,128),\n","                                             class_mode='binary',\n","                                             shuffle=False,\n","                                             seed=10)"]},{"cell_type":"markdown","source":["** K-FOLD CROSS VALIDATION **"],"metadata":{"id":"p1xJq5IH8Xgb"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"g1nSjq46aQ4L"},"outputs":[],"source":["from tensorflow.keras.layers import Input, RandomFlip, RandomRotation \n","from sklearn.model_selection import KFold\n","import numpy as np "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":417,"status":"ok","timestamp":1684413280247,"user":{"displayName":"Angela Roberti","userId":"00499277721803720726"},"user_tz":-120},"id":"J8H5u9LBaddY","outputId":"570e1537-f1ef-4c63-ace9-e07129f61b1f"},"outputs":[{"output_type":"stream","name":"stdout","text":["['/content/CatsDogs/Cats/0.jpg' '/content/CatsDogs/Cats/1.jpg'\n"," '/content/CatsDogs/Cats/10.jpg' ... '/content/CatsDogs/Dogs/9997.jpg'\n"," '/content/CatsDogs/Dogs/9998.jpg' '/content/CatsDogs/Dogs/9999.jpg']\n"]}],"source":["CD = np.array(df['Path'])\n","print(CD)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cZKeXltuQkb9"},"outputs":[],"source":["k = 5\n","kf = KFold(n_splits=k, random_state=333, shuffle=True)\n","\n","acc_score = []\n","loss_score = []\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Y5xsKZnKvT7E"},"outputs":[],"source":["def create_model_8():\n","  #MODELLO 8 32-64-128-256 W/ DATA AUGM + drop\n","  model_8=Sequential()\n","\n","  model_8.add(Input((128,128,3)))\n","  model_8.add(RandomFlip(\"horizontal\"))\n","  model_8.add(RandomRotation(0.2))\n","\n","  model_8.add(Conv2D(filters=32, kernel_size=(3,3)))\n","  model_8.add(Activation(activation=\"relu\"))\n","  model_8.add(MaxPooling2D(pool_size=(2,2)))\n","  model_8.add(Dropout(0.2))\n","\n","  model_8.add(Conv2D(filters=64, kernel_size=(3,3)))\n","  model_8.add(Activation(activation=\"relu\"))\n","  model_8.add(MaxPooling2D(pool_size=(2,2))) \n","  model_8.add(Dropout(0.2))\n","\n","  model_8.add(Conv2D(filters=128, kernel_size=(3,3)))\n","  model_8.add(Activation(activation=\"relu\"))\n","  model_8.add(MaxPooling2D(pool_size=(2,2))) \n","  model_8.add(Dropout(0.2))\n","\n","  model_8.add(Conv2D(filters=256, kernel_size=(3,3)))\n","  model_8.add(Activation(activation=\"relu\"))\n","  model_8.add(MaxPooling2D(pool_size=(2,2))) \n","  model_8.add(Dropout(0.2))\n","\n","  model_8.add(Flatten())\n","  model_8.add(Dense(64)) \n","  model_8.add(Activation(\"relu\"))\n","  model_8.add(Dropout(0.5))\n","\n","  model_8.add(Dense(1))\n","  model_8.add(Activation(\"sigmoid\"))\n","\n","  model_8.compile(optimizer=tf.keras.optimizers.Adam(),\n","              loss=tf.keras.losses.BinaryCrossentropy(),\n","              metrics= [\"accuracy\"])\n","\n","  return model_8"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-7zVEvRCQ6-O","outputId":"c866b64e-9d09-4cfc-c474-95d38deec0a5","executionInfo":{"status":"ok","timestamp":1684431005163,"user_tz":-120,"elapsed":661264,"user":{"displayName":"Angela Roberti","userId":"00499277721803720726"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Found 18728 validated image filenames belonging to 2 classes.\n","Found 4682 validated image filenames belonging to 2 classes.\n","Epoch 1/50\n","586/586 [==============================] - 85s 120ms/step - loss: 0.6873 - accuracy: 0.5456\n","Epoch 2/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.6512 - accuracy: 0.6233\n","Epoch 3/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.6020 - accuracy: 0.6799\n","Epoch 4/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.5643 - accuracy: 0.7135\n","Epoch 5/50\n","586/586 [==============================] - 70s 119ms/step - loss: 0.5288 - accuracy: 0.7366\n","Epoch 6/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.5071 - accuracy: 0.7586\n","Epoch 7/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.4891 - accuracy: 0.7667\n","Epoch 8/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4750 - accuracy: 0.7795\n","Epoch 9/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.4528 - accuracy: 0.7926\n","Epoch 10/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.4454 - accuracy: 0.7985\n","Epoch 11/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4255 - accuracy: 0.8095\n","Epoch 12/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.4149 - accuracy: 0.8162\n","Epoch 13/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4007 - accuracy: 0.8255\n","Epoch 14/50\n","586/586 [==============================] - 65s 112ms/step - loss: 0.3914 - accuracy: 0.8272\n","Epoch 15/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.3914 - accuracy: 0.8260\n","Epoch 16/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3822 - accuracy: 0.8339\n","Epoch 17/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3779 - accuracy: 0.8345\n","Epoch 18/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3675 - accuracy: 0.8452\n","Epoch 19/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3643 - accuracy: 0.8448\n","Epoch 20/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3501 - accuracy: 0.8469\n","Epoch 21/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.3496 - accuracy: 0.8505\n","Epoch 22/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3489 - accuracy: 0.8482\n","Epoch 23/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3443 - accuracy: 0.8538\n","Epoch 24/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.3353 - accuracy: 0.8552\n","Epoch 25/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3286 - accuracy: 0.8602\n","Epoch 26/50\n","586/586 [==============================] - 66s 112ms/step - loss: 0.3203 - accuracy: 0.8612\n","Epoch 27/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.3222 - accuracy: 0.8639\n","Epoch 28/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3214 - accuracy: 0.8615\n","Epoch 29/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3096 - accuracy: 0.8663\n","Epoch 30/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3135 - accuracy: 0.8662\n","Epoch 31/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3050 - accuracy: 0.8700\n","Epoch 32/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.3076 - accuracy: 0.8732\n","Epoch 33/50\n","586/586 [==============================] - 66s 112ms/step - loss: 0.3032 - accuracy: 0.8719\n","Epoch 34/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.3019 - accuracy: 0.8708\n","Epoch 35/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2911 - accuracy: 0.8771\n","Epoch 36/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2906 - accuracy: 0.8755\n","Epoch 37/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.2888 - accuracy: 0.8793\n","Epoch 38/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2869 - accuracy: 0.8808\n","Epoch 39/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2809 - accuracy: 0.8812\n","Epoch 40/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.2858 - accuracy: 0.8798\n","Epoch 41/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.2838 - accuracy: 0.8788\n","Epoch 42/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.2876 - accuracy: 0.8817\n","Epoch 43/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2774 - accuracy: 0.8863\n","Epoch 44/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.2709 - accuracy: 0.8869\n","Epoch 45/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.2760 - accuracy: 0.8859\n","Epoch 46/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2745 - accuracy: 0.8884\n","Epoch 47/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2731 - accuracy: 0.8875\n","Epoch 48/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.2703 - accuracy: 0.8861\n","Epoch 49/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.2663 - accuracy: 0.8904\n","Epoch 50/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.2639 - accuracy: 0.8899\n","147/147 [==============================] - 16s 109ms/step - loss: 0.1935 - accuracy: 0.9158\n","Found 18728 validated image filenames belonging to 2 classes.\n","Found 4682 validated image filenames belonging to 2 classes.\n","Epoch 1/50\n","586/586 [==============================] - 70s 116ms/step - loss: 0.6898 - accuracy: 0.5402\n","Epoch 2/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.6817 - accuracy: 0.5670\n","Epoch 3/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.6676 - accuracy: 0.5942\n","Epoch 4/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.6229 - accuracy: 0.6589\n","Epoch 5/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.5810 - accuracy: 0.7022\n","Epoch 6/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.5558 - accuracy: 0.7239\n","Epoch 7/50\n","586/586 [==============================] - 70s 119ms/step - loss: 0.5281 - accuracy: 0.7466\n","Epoch 8/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.5123 - accuracy: 0.7560\n","Epoch 9/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4941 - accuracy: 0.7708\n","Epoch 10/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4886 - accuracy: 0.7757\n","Epoch 11/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.4660 - accuracy: 0.7840\n","Epoch 12/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.4545 - accuracy: 0.7934\n","Epoch 13/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.4393 - accuracy: 0.8055\n","Epoch 14/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.4306 - accuracy: 0.8089\n","Epoch 15/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.4150 - accuracy: 0.8143\n","Epoch 16/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.4085 - accuracy: 0.8216\n","Epoch 17/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3979 - accuracy: 0.8265\n","Epoch 18/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3902 - accuracy: 0.8294\n","Epoch 19/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3831 - accuracy: 0.8331\n","Epoch 20/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3755 - accuracy: 0.8345\n","Epoch 21/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3725 - accuracy: 0.8391\n","Epoch 22/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3661 - accuracy: 0.8431\n","Epoch 23/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.3571 - accuracy: 0.8472\n","Epoch 24/50\n","586/586 [==============================] - 70s 119ms/step - loss: 0.3539 - accuracy: 0.8480\n","Epoch 25/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.3480 - accuracy: 0.8554\n","Epoch 26/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.3429 - accuracy: 0.8530\n","Epoch 27/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3404 - accuracy: 0.8535\n","Epoch 28/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3350 - accuracy: 0.8571\n","Epoch 29/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.3288 - accuracy: 0.8629\n","Epoch 30/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3285 - accuracy: 0.8607\n","Epoch 31/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3272 - accuracy: 0.8643\n","Epoch 32/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3200 - accuracy: 0.8636\n","Epoch 33/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3216 - accuracy: 0.8655\n","Epoch 34/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.3086 - accuracy: 0.8692\n","Epoch 35/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3146 - accuracy: 0.8698\n","Epoch 36/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3062 - accuracy: 0.8736\n","Epoch 37/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.3057 - accuracy: 0.8750\n","Epoch 38/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3011 - accuracy: 0.8727\n","Epoch 39/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.3033 - accuracy: 0.8740\n","Epoch 40/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.3018 - accuracy: 0.8713\n","Epoch 41/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.2974 - accuracy: 0.8763\n","Epoch 42/50\n","586/586 [==============================] - 66s 112ms/step - loss: 0.2934 - accuracy: 0.8768\n","Epoch 43/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.2927 - accuracy: 0.8788\n","Epoch 44/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.2971 - accuracy: 0.8772\n","Epoch 45/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2874 - accuracy: 0.8825\n","Epoch 46/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.2879 - accuracy: 0.8791\n","Epoch 47/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.2869 - accuracy: 0.8814\n","Epoch 48/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.2835 - accuracy: 0.8827\n","Epoch 49/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2771 - accuracy: 0.8853\n","Epoch 50/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.2791 - accuracy: 0.8842\n","147/147 [==============================] - 16s 109ms/step - loss: 0.2513 - accuracy: 0.8902\n","Found 18728 validated image filenames belonging to 2 classes.\n","Found 4682 validated image filenames belonging to 2 classes.\n","Epoch 1/50\n","586/586 [==============================] - 71s 116ms/step - loss: 0.6946 - accuracy: 0.5106\n","Epoch 2/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.6876 - accuracy: 0.5372\n","Epoch 3/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.6709 - accuracy: 0.5890\n","Epoch 4/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.6266 - accuracy: 0.6509\n","Epoch 5/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.5844 - accuracy: 0.6944\n","Epoch 6/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.5592 - accuracy: 0.7158\n","Epoch 7/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.5369 - accuracy: 0.7336\n","Epoch 8/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.5222 - accuracy: 0.7414\n","Epoch 9/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.5044 - accuracy: 0.7578\n","Epoch 10/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.4888 - accuracy: 0.7683\n","Epoch 11/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4808 - accuracy: 0.7743\n","Epoch 12/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.4627 - accuracy: 0.7837\n","Epoch 13/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.4469 - accuracy: 0.7936\n","Epoch 14/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4368 - accuracy: 0.8021\n","Epoch 15/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.4262 - accuracy: 0.8122\n","Epoch 16/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.4232 - accuracy: 0.8066\n","Epoch 17/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4135 - accuracy: 0.8121\n","Epoch 18/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4023 - accuracy: 0.8203\n","Epoch 19/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.4036 - accuracy: 0.8192\n","Epoch 20/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3884 - accuracy: 0.8277\n","Epoch 21/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3802 - accuracy: 0.8313\n","Epoch 22/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.3809 - accuracy: 0.8323\n","Epoch 23/50\n","586/586 [==============================] - 71s 121ms/step - loss: 0.3704 - accuracy: 0.8371\n","Epoch 24/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3673 - accuracy: 0.8430\n","Epoch 25/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.3670 - accuracy: 0.8421\n","Epoch 26/50\n","586/586 [==============================] - 70s 120ms/step - loss: 0.3567 - accuracy: 0.8465\n","Epoch 27/50\n","586/586 [==============================] - 71s 120ms/step - loss: 0.3532 - accuracy: 0.8448\n","Epoch 28/50\n","586/586 [==============================] - 71s 122ms/step - loss: 0.3443 - accuracy: 0.8504\n","Epoch 29/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.3415 - accuracy: 0.8521\n","Epoch 30/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3421 - accuracy: 0.8531\n","Epoch 31/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.3359 - accuracy: 0.8542\n","Epoch 32/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3339 - accuracy: 0.8549\n","Epoch 33/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3248 - accuracy: 0.8625\n","Epoch 34/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.3221 - accuracy: 0.8606\n","Epoch 35/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.3260 - accuracy: 0.8628\n","Epoch 36/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3219 - accuracy: 0.8641\n","Epoch 37/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3197 - accuracy: 0.8633\n","Epoch 38/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.3118 - accuracy: 0.8684\n","Epoch 39/50\n","586/586 [==============================] - 67s 113ms/step - loss: 0.3123 - accuracy: 0.8675\n","Epoch 40/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3101 - accuracy: 0.8644\n","Epoch 41/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3097 - accuracy: 0.8704\n","Epoch 42/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3055 - accuracy: 0.8718\n","Epoch 43/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.2960 - accuracy: 0.8741\n","Epoch 44/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2995 - accuracy: 0.8739\n","Epoch 45/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.3009 - accuracy: 0.8741\n","Epoch 46/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.2948 - accuracy: 0.8743\n","Epoch 47/50\n","586/586 [==============================] - 66s 112ms/step - loss: 0.2893 - accuracy: 0.8796\n","Epoch 48/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2910 - accuracy: 0.8793\n","Epoch 49/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.2827 - accuracy: 0.8818\n","Epoch 50/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.2909 - accuracy: 0.8783\n","147/147 [==============================] - 17s 114ms/step - loss: 0.2272 - accuracy: 0.9058\n","Found 18728 validated image filenames belonging to 2 classes.\n","Found 4682 validated image filenames belonging to 2 classes.\n","Epoch 1/50\n","586/586 [==============================] - 70s 113ms/step - loss: 0.6894 - accuracy: 0.5408\n","Epoch 2/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.6654 - accuracy: 0.5912\n","Epoch 3/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.6101 - accuracy: 0.6700\n","Epoch 4/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.5698 - accuracy: 0.7054\n","Epoch 5/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.5503 - accuracy: 0.7263\n","Epoch 6/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.5281 - accuracy: 0.7452\n","Epoch 7/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.5051 - accuracy: 0.7603\n","Epoch 8/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.4888 - accuracy: 0.7726\n","Epoch 9/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.4727 - accuracy: 0.7768\n","Epoch 10/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.4570 - accuracy: 0.7872\n","Epoch 11/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.4525 - accuracy: 0.7939\n","Epoch 12/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4272 - accuracy: 0.8077\n","Epoch 13/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4154 - accuracy: 0.8128\n","Epoch 14/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.4106 - accuracy: 0.8130\n","Epoch 15/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3953 - accuracy: 0.8245\n","Epoch 16/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3921 - accuracy: 0.8279\n","Epoch 17/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3780 - accuracy: 0.8322\n","Epoch 18/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3753 - accuracy: 0.8382\n","Epoch 19/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.3652 - accuracy: 0.8408\n","Epoch 20/50\n","586/586 [==============================] - 66s 112ms/step - loss: 0.3546 - accuracy: 0.8493\n","Epoch 21/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3561 - accuracy: 0.8454\n","Epoch 22/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3496 - accuracy: 0.8476\n","Epoch 23/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3463 - accuracy: 0.8533\n","Epoch 24/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.3392 - accuracy: 0.8560\n","Epoch 25/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.3347 - accuracy: 0.8592\n","Epoch 26/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3293 - accuracy: 0.8631\n","Epoch 27/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3220 - accuracy: 0.8627\n","Epoch 28/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.3222 - accuracy: 0.8629\n","Epoch 29/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.3147 - accuracy: 0.8660\n","Epoch 30/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3025 - accuracy: 0.8728\n","Epoch 31/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3065 - accuracy: 0.8727\n","Epoch 32/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.2994 - accuracy: 0.8755\n","Epoch 33/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3015 - accuracy: 0.8730\n","Epoch 34/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.3027 - accuracy: 0.8718\n","Epoch 35/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2918 - accuracy: 0.8754\n","Epoch 36/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.2928 - accuracy: 0.8778\n","Epoch 37/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.2929 - accuracy: 0.8787\n","Epoch 38/50\n","586/586 [==============================] - 69s 117ms/step - loss: 0.2861 - accuracy: 0.8769\n","Epoch 39/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.2818 - accuracy: 0.8835\n","Epoch 40/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2833 - accuracy: 0.8824\n","Epoch 41/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.2713 - accuracy: 0.8868\n","Epoch 42/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.2748 - accuracy: 0.8844\n","Epoch 43/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2749 - accuracy: 0.8865\n","Epoch 44/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.2752 - accuracy: 0.8854\n","Epoch 45/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2679 - accuracy: 0.8911\n","Epoch 46/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2676 - accuracy: 0.8878\n","Epoch 47/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2646 - accuracy: 0.8901\n","Epoch 48/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2601 - accuracy: 0.8935\n","Epoch 49/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2638 - accuracy: 0.8905\n","Epoch 50/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2587 - accuracy: 0.8920\n","147/147 [==============================] - 17s 110ms/step - loss: 0.2136 - accuracy: 0.9118\n","Found 18728 validated image filenames belonging to 2 classes.\n","Found 4682 validated image filenames belonging to 2 classes.\n","Epoch 1/50\n","586/586 [==============================] - 70s 115ms/step - loss: 0.6930 - accuracy: 0.5111\n","Epoch 2/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.6801 - accuracy: 0.5642\n","Epoch 3/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.6489 - accuracy: 0.6237\n","Epoch 4/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.5946 - accuracy: 0.6798\n","Epoch 5/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.5558 - accuracy: 0.7152\n","Epoch 6/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.5358 - accuracy: 0.7353\n","Epoch 7/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.5095 - accuracy: 0.7535\n","Epoch 8/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.4943 - accuracy: 0.7685\n","Epoch 9/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.4752 - accuracy: 0.7740\n","Epoch 10/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4625 - accuracy: 0.7842\n","Epoch 11/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4424 - accuracy: 0.7983\n","Epoch 12/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.4340 - accuracy: 0.8036\n","Epoch 13/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.4215 - accuracy: 0.8108\n","Epoch 14/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.4143 - accuracy: 0.8186\n","Epoch 15/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.4009 - accuracy: 0.8224\n","Epoch 16/50\n","586/586 [==============================] - 70s 119ms/step - loss: 0.3949 - accuracy: 0.8253\n","Epoch 17/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3912 - accuracy: 0.8299\n","Epoch 18/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3839 - accuracy: 0.8343\n","Epoch 19/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3746 - accuracy: 0.8361\n","Epoch 20/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.3740 - accuracy: 0.8382\n","Epoch 21/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3679 - accuracy: 0.8390\n","Epoch 22/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.3547 - accuracy: 0.8501\n","Epoch 23/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3514 - accuracy: 0.8478\n","Epoch 24/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.3557 - accuracy: 0.8432\n","Epoch 25/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.3458 - accuracy: 0.8528\n","Epoch 26/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3392 - accuracy: 0.8570\n","Epoch 27/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.3366 - accuracy: 0.8558\n","Epoch 28/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3311 - accuracy: 0.8580\n","Epoch 29/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3213 - accuracy: 0.8618\n","Epoch 30/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3227 - accuracy: 0.8626\n","Epoch 31/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.3222 - accuracy: 0.8622\n","Epoch 32/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.3114 - accuracy: 0.8679\n","Epoch 33/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3113 - accuracy: 0.8683\n","Epoch 34/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.3064 - accuracy: 0.8680\n","Epoch 35/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3069 - accuracy: 0.8680\n","Epoch 36/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.3000 - accuracy: 0.8708\n","Epoch 37/50\n","586/586 [==============================] - 66s 113ms/step - loss: 0.3050 - accuracy: 0.8716\n","Epoch 38/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2999 - accuracy: 0.8752\n","Epoch 39/50\n","586/586 [==============================] - 69s 118ms/step - loss: 0.2978 - accuracy: 0.8749\n","Epoch 40/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2878 - accuracy: 0.8798\n","Epoch 41/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2937 - accuracy: 0.8768\n","Epoch 42/50\n","586/586 [==============================] - 67s 114ms/step - loss: 0.2916 - accuracy: 0.8773\n","Epoch 43/50\n","586/586 [==============================] - 68s 117ms/step - loss: 0.2879 - accuracy: 0.8792\n","Epoch 44/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.2844 - accuracy: 0.8763\n","Epoch 45/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.2862 - accuracy: 0.8798\n","Epoch 46/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.2871 - accuracy: 0.8789\n","Epoch 47/50\n","586/586 [==============================] - 68s 116ms/step - loss: 0.2752 - accuracy: 0.8801\n","Epoch 48/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.2845 - accuracy: 0.8801\n","Epoch 49/50\n","586/586 [==============================] - 67s 115ms/step - loss: 0.2801 - accuracy: 0.8814\n","Epoch 50/50\n","586/586 [==============================] - 68s 115ms/step - loss: 0.2784 - accuracy: 0.8809\n","147/147 [==============================] - 15s 104ms/step - loss: 0.2991 - accuracy: 0.8906\n"]}],"source":["for train_index , test_index in kf.split(CD):\n","    X_train = CD[train_index]\n","    X_test = CD[test_index]\n","\n","    train_cv = shuffled.loc[shuffled['Path'].isin(X_train)]\n","    test_cv = shuffled.loc[shuffled['Path'].isin(X_test)]\n","\n","    training_ds= datagenA.flow_from_dataframe(dataframe= train_cv,\n","                                              directory=\"/content/CatsDogs\",\n","                                              x_col ='Path',\n","                                              y_col='Class',\n","                                              target_size=(128,128),\n","                                              class_mode='binary',\n","                                              seed=10)\n","    test_ds= datagenB.flow_from_dataframe(dataframe= test_cv,\n","                                                directory=\"/content/CatsDogs\",\n","                                                x_col ='Path',\n","                                                y_col='Class',\n","                                                target_size=(128,128),\n","                                                class_mode='binary',\n","                                                shuffle=False,\n","                                                seed=10)\n","    \n","    model_8_cv = create_model_8()\n","    model_8_cv.fit(training_ds, epochs = 50)\n","    results = model_8_cv.evaluate(test_ds)\n","     \n","    acc = results[1]\n","    acc_score.append(acc)\n","\n","    loss = results[0]\n","    loss_score.append(loss)"]},{"cell_type":"code","source":["avg_acc_score1 = np.mean(acc_score) \n"," \n","print('accuracy of each fold - {}'.format(acc_score))\n","print('Avg accuracy : {}'.format(avg_acc_score))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VZuZHgUm6bUR","executionInfo":{"status":"ok","timestamp":1684431039657,"user_tz":-120,"elapsed":382,"user":{"displayName":"Angela Roberti","userId":"00499277721803720726"}},"outputId":"77068147-e01f-473e-d287-51be49417580"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["accuracy of each fold - [0.9158479571342468, 0.8902178406715393, 0.9058094620704651, 0.9117898344993591, 0.8906450271606445]\n","Avg accuracy : 0.9028620243072509\n"]}]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[],"authorship_tag":"ABX9TyP9ch+o/S+8PX4bBbFTile0"},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}